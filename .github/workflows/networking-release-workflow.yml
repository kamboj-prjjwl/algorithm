name: Checkout New Branch

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions: 
  contents: write

jobs:
  checkout_new_branch:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'network-release')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Fetch API version 
        id: fetch_api_version 
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          GITHUB_REPOSITORY: ${{ github.repository }} 
        run: |
              $lastMergedPR = Invoke-RestMethod -Headers @{ Authorization = "token $env:GITHUB_TOKEN" } -Uri "https://api.github.com/repos/$env:GITHUB_REPOSITORY/pulls?state=closed&sort=updated&direction=desc" -Method Get | Where-Object { $_.merged_at -ne $null } | Select-Object -First 1 
              $apiVersionLabel = $lastMergedPR.labels | Where-Object { $_.name -match 'API-VER-\d{4}-\d{2}-\d{2}' } | Select-Object -First 1 
              $apiVersion = $apiVersionLabel.name 
              $apiVersionDate = [datetime]::ParseExact($apiVersion.Substring(8), 'yyyy-MM-dd', $null) 
              $updatedApiVersionDate = $apiVersionDate.AddMonths(2) 
              $updatedApiVersion = "API-VER-" + $updatedApiVersionDate.ToString('yyyy-MM-dd') 
              echo "::set-output name=api_version::$updatedApiVersion"       
        shell: pwsh

      - name: Create Swagger Release Branch
        env: 
          API_VERSION: ${{ steps.fetch_api_version.outputs.api_version }}        
        run: |
              ./eng/scripts/Create-NetworkReleaseBranchSwagger.ps1 -API_VERSION ${{ steps.fetch_api_version.outputs.api_version }}
        shell: pwsh
